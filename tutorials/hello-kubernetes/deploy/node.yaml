kind: Service
apiVersion: v1
metadata:
  name: nodeapp
  labels:
    app: node
    app.kubernetes.io/name: nodeapp
    app.kubernetes.io/instance: nodeapp
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: hello-kubernetes-dapr
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/created-by: quickstart-user
spec:
  selector:
    app: node
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodeapp
  labels:
    app: node
    app.kubernetes.io/name: nodeapp
    app.kubernetes.io/instance: nodeapp
    app.kubernetes.io/component: deployment
    app.kubernetes.io/part-of: hello-kubernetes-dapr
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/created-by: quickstart-user
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node
  template:
    metadata:
      labels:
        app: node
        app.kubernetes.io/name: nodeapp
        app.kubernetes.io/instance: nodeapp
        app.kubernetes.io/component: pod
        app.kubernetes.io/part-of: hello-kubernetes-dapr
        app.kubernetes.io/managed-by: kubectl
        app.kubernetes.io/created-by: quickstart-user
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "nodeapp"
        dapr.io/app-port: "3000"
        dapr.io/enable-api-logging: "true"
    spec:
      containers:
      - name: node
        image: ghcr.io/dapr/samples/hello-k8s-node:latest
        env:
        - name: APP_PORT
          value: "3000"
        ports:
        - containerPort: 3000
        imagePullPolicy: Always
